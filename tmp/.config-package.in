menuconfig IMAGEOPT
	bool "Image configuration"
	default n
source "package/*/image-config.in"
menu "Base system"

	config PACKAGE_libasan
		tristate "libasan...................... Runtime library for AddressSanitizer in GCC"
		default y if DEFAULT_libasan
		default m if ALL||ALL_NONSHARED
		depends on !mips64el
		depends on USE_GLIBC
		select PACKAGE_libstdcpp
		depends on !arc
		depends on !mips64
		select PACKAGE_librt
		help
		 Runtime library for AddressSanitizer in GCC
		 http://gcc.gnu.org/
		 Felix Fietkau <nbd@nbd.name>


		menu "Configuration"
		depends on EXTERNAL_TOOLCHAIN && PACKAGE_libasan
	
		config LIBASAN_ROOT_DIR
			string
			prompt "libasan shared library base directory"
			depends on EXTERNAL_TOOLCHAIN && PACKAGE_libasan
			default TOOLCHAIN_ROOT  if !NATIVE_TOOLCHAIN
			default "/"  if NATIVE_TOOLCHAIN
	
		config LIBASAN_FILE_SPEC
			string
			prompt "libasan shared library files (use wildcards)"
			depends on EXTERNAL_TOOLCHAIN && PACKAGE_libasan
			default "./lib/libasan.so.*"
	
		endmenu

	config PACKAGE_libatomic
		tristate "libatomic......................................... Atomic support library"
		default y if DEFAULT_libatomic
		default m if ALL||ALL_NONSHARED
		select PACKAGE_libgcc
		help
		 Atomic support library
		 http://gcc.gnu.org/
		 Felix Fietkau <nbd@nbd.name>


		menu "Configuration"
			depends on EXTERNAL_TOOLCHAIN && PACKAGE_libatomic
	
		config LIBATOMIC_ROOT_DIR
			string
			prompt "libatomic shared library base directory"
			depends on EXTERNAL_TOOLCHAIN && PACKAGE_libatomic
			default TOOLCHAIN_ROOT  if !NATIVE_TOOLCHAIN
			default "/"  if NATIVE_TOOLCHAIN
	
		config LIBATOMIC_FILE_SPEC
			string
			prompt "libatomic shared library files (use wildcards)"
			depends on EXTERNAL_TOOLCHAIN && PACKAGE_libatomic
			default "./lib/libatomic.so.*"
	
		endmenu

	config PACKAGE_libc
		tristate "libc........................................................... C library"
		default y if DEFAULT_libc
		default m if ALL||ALL_NONSHARED
		select PACKAGE_libgcc
		help
		 C library
		 Felix Fietkau <nbd@nbd.name>


		menu "Configuration"
		depends on EXTERNAL_TOOLCHAIN && PACKAGE_libc
	
		config LIBC_ROOT_DIR
			string
			prompt "libc shared library base directory"
			depends on EXTERNAL_TOOLCHAIN && PACKAGE_libc
			default TOOLCHAIN_ROOT  if !NATIVE_TOOLCHAIN
			default "/"  if NATIVE_TOOLCHAIN
	
		config LIBC_FILE_SPEC
			string
			prompt "libc shared library files (use wildcards)"
			depends on EXTERNAL_TOOLCHAIN && PACKAGE_libc
			default "./lib/ld{*.so*,-linux*.so.*} ./lib/lib{anl,c,cidn,crypt,dl,m,nsl,nss_dns,nss_files,resolv,util}{-*.so,.so.*,.so}"
	
		endmenu

	config PACKAGE_libgcc
		tristate "libgcc............................................... GCC support library"
		default y if DEFAULT_libgcc
		default m if ALL||ALL_NONSHARED
		help
		 GCC support library
		 http://gcc.gnu.org/
		 Felix Fietkau <nbd@nbd.name>


		menu "Configuration"
			depends on EXTERNAL_TOOLCHAIN && PACKAGE_libgcc
	
		config LIBGCC_ROOT_DIR
			string
			prompt "libgcc shared library base directory"
			depends on EXTERNAL_TOOLCHAIN && PACKAGE_libgcc
			default TOOLCHAIN_ROOT  if !NATIVE_TOOLCHAIN
			default "/"  if NATIVE_TOOLCHAIN
	
		config LIBGCC_FILE_SPEC
			string
			prompt "libgcc shared library files (use wildcards)"
			depends on EXTERNAL_TOOLCHAIN && PACKAGE_libgcc
			default "./lib/libgcc_s.so.*"
	
		endmenu

	config PACKAGE_libgfortran
		tristate "libgfortran..................................... GFortran support library"
		default y if DEFAULT_libgfortran
		default m if ALL||ALL_NONSHARED
		depends on INSTALL_GFORTRAN
		help
		 GFortran support library
		 http://gcc.gnu.org/
		 Felix Fietkau <nbd@nbd.name>


		menu "Configuration"
			depends on EXTERNAL_TOOLCHAIN && PACKAGE_libgfortran
	
		config LIBGFORTRAN_ROOT_DIR
			string
			prompt "libgfortran shared library base directory"
			depends on EXTERNAL_TOOLCHAIN && PACKAGE_libgfortran
			default TOOLCHAIN_ROOT  if !NATIVE_TOOLCHAIN
			default "/"  if NATIVE_TOOLCHAIN
	
		config LIBGFORTRAN_FILE_SPEC
			string
			prompt "libgfortran shared library files (use wildcards)"
			depends on EXTERNAL_TOOLCHAIN && PACKAGE_libgfortran
			default "./usr/lib/libgfortran.so.*"
	
		endmenu

	config PACKAGE_libgomp
		tristate "libgomp........................................... OpenMP support library"
		default y if DEFAULT_libgomp
		default m if ALL||ALL_NONSHARED
		help
		 OpenMP support library
		 http://gcc.gnu.org/
		 Felix Fietkau <nbd@nbd.name>


		menu "Configuration"
			depends on EXTERNAL_TOOLCHAIN && PACKAGE_libgomp
	
		config LIBGOMP_ROOT_DIR
			string
			prompt "libgomp shared library base directory"
			depends on EXTERNAL_TOOLCHAIN && PACKAGE_libgomp
			default TOOLCHAIN_ROOT  if !NATIVE_TOOLCHAIN
			default "/"  if NATIVE_TOOLCHAIN
	
		config LIBGOMP_FILE_SPEC
			string
			prompt "libgomp shared library files (use wildcards)"
			depends on EXTERNAL_TOOLCHAIN && PACKAGE_libgomp
			default "./lib/libgomp.so*"
	
		endmenu

	config PACKAGE_liblsan
		tristate "liblsan......................... Runtime library for LeakSanitizer in GCC"
		default y if DEFAULT_liblsan
		default m if ALL||ALL_NONSHARED
		depends on !arc
		depends on USE_GLIBC
		depends on !mips
		depends on !mips64
		select PACKAGE_librt
		depends on !mips64el
		depends on !mipsel
		select PACKAGE_libstdcpp
		help
		 Runtime library for LeakSanitizer in GCC
		 http://gcc.gnu.org/
		 Felix Fietkau <nbd@nbd.name>


		menu "Configuration"
		depends on EXTERNAL_TOOLCHAIN && PACKAGE_liblsan
	
		config LIBLSAN_ROOT_DIR
			string
			prompt "liblsan shared library base directory"
			depends on EXTERNAL_TOOLCHAIN && PACKAGE_liblsan
			default TOOLCHAIN_ROOT  if !NATIVE_TOOLCHAIN
			default "/"  if NATIVE_TOOLCHAIN
	
		config LIBLSAN_FILE_SPEC
			string
			prompt "liblsan shared library files (use wildcards)"
			depends on EXTERNAL_TOOLCHAIN && PACKAGE_liblsan
			default "./lib/liblsan.so.*"
	
		endmenu

	config PACKAGE_libpthread
		tristate "libpthread.......................................... POSIX thread library"
		default y if DEFAULT_libpthread
		default m if ALL||ALL_NONSHARED
		select PACKAGE_libgcc
		help
		 POSIX thread library
		 Felix Fietkau <nbd@nbd.name>


		menu "Configuration"
		depends on EXTERNAL_TOOLCHAIN && PACKAGE_libpthread
	
		config LIBPTHREAD_ROOT_DIR
			string
			prompt "libpthread shared library base directory"
			depends on EXTERNAL_TOOLCHAIN && PACKAGE_libpthread
			default TOOLCHAIN_ROOT  if !NATIVE_TOOLCHAIN
			default "/"  if NATIVE_TOOLCHAIN
	
		config LIBPTHREAD_FILE_SPEC
			string
			prompt "libpthread shared library files (use wildcards)"
			depends on EXTERNAL_TOOLCHAIN && PACKAGE_libpthread
			default "./lib/libpthread{-*.so,.so.*}"
	
		endmenu

	config PACKAGE_librt
		tristate "librt................................ POSIX.1b RealTime extension library"
		default y if DEFAULT_librt
		default m if ALL||ALL_NONSHARED
		select PACKAGE_libpthread
		help
		 POSIX.1b RealTime extension library
		 Felix Fietkau <nbd@nbd.name>


		menu "Configuration"
		depends on EXTERNAL_TOOLCHAIN && PACKAGE_librt
	
		config LIBRT_ROOT_DIR
			string
			prompt "librt shared library base directory"
			depends on EXTERNAL_TOOLCHAIN && PACKAGE_librt
			default TOOLCHAIN_ROOT  if !NATIVE_TOOLCHAIN
			default "/"  if NATIVE_TOOLCHAIN
	
		config LIBRT_FILE_SPEC
			string
			prompt "librt shared library files (use wildcards)"
			depends on EXTERNAL_TOOLCHAIN && PACKAGE_librt
			default "./lib/librt{-*.so,.so.*}"
	
		endmenu

	config PACKAGE_libstdcpp
		tristate "libstdcpp.................................... GNU Standard C++ Library v3"
		default y if DEFAULT_libstdcpp
		default m if ALL||ALL_NONSHARED
		help
		 GNU Standard C++ Library v3
		 http://gcc.gnu.org/
		 Felix Fietkau <nbd@nbd.name>


		menu "Configuration"
		depends on EXTERNAL_TOOLCHAIN && PACKAGE_libstdcpp
	
		config LIBSTDCPP_ROOT_DIR
			string
			prompt "libstdcpp shared library base directory"
			depends on EXTERNAL_TOOLCHAIN && PACKAGE_libstdcpp
			default TOOLCHAIN_ROOT  if !NATIVE_TOOLCHAIN
			default "/"  if NATIVE_TOOLCHAIN
	
		config LIBSTDCPP_FILE_SPEC
			string
			prompt "libstdc++ shared library files (use wildcards)"
			depends on EXTERNAL_TOOLCHAIN && PACKAGE_libstdcpp
			default "./lib/libstdc++.so.*"
	
		endmenu

	config PACKAGE_libthread-db
		tristate "libthread-db...................... POSIX thread library debugging support"
		default y if DEFAULT_libthread-db
		default m if ALL||ALL_NONSHARED
		depends on !USE_MUSL
		help
		 POSIX thread library debugging support
		 Felix Fietkau <nbd@nbd.name>


		menu "Configuration"
		depends on EXTERNAL_TOOLCHAIN && PACKAGE_libthread-db
	
		config LIBTHREAD_DB_ROOT_DIR
			string
			prompt "POSIX thread debugging shared library base directory"
			depends on EXTERNAL_TOOLCHAIN && PACKAGE_libthread-db
			default TOOLCHAIN_ROOT  if !NATIVE_TOOLCHAIN
			default "/"  if NATIVE_TOOLCHAIN
	
		config LIBTHREAD_DB_FILE_SPEC
			string
			prompt "POSIX thread debugging shared library files (use wildcards)"
			depends on EXTERNAL_TOOLCHAIN && PACKAGE_libthread-db
			default "./lib/libthread_db{-*.so,.so.*}"
	
		endmenu

	config PACKAGE_libtsan
		tristate "libtsan....................... Runtime library for ThreadSanitizer in GCC"
		default y if DEFAULT_libtsan
		default m if ALL||ALL_NONSHARED
		depends on !arc
		depends on USE_GLIBC
		select PACKAGE_librt
		depends on !mips64
		depends on !mips
		select PACKAGE_libstdcpp
		depends on !mips64el
		depends on !mipsel
		help
		 Runtime library for ThreadSanitizer in GCC
		 http://gcc.gnu.org/
		 Felix Fietkau <nbd@nbd.name>


		menu "Configuration"
		depends on EXTERNAL_TOOLCHAIN && PACKAGE_libtsan
	
		config LIBTSAN_ROOT_DIR
			string
			prompt "libtsan shared library base directory"
			depends on EXTERNAL_TOOLCHAIN && PACKAGE_libtsan
			default TOOLCHAIN_ROOT  if !NATIVE_TOOLCHAIN
			default "/"  if NATIVE_TOOLCHAIN
	
		config LIBTSAN_FILE_SPEC
			string
			prompt "libtsan shared library files (use wildcards)"
			depends on EXTERNAL_TOOLCHAIN && PACKAGE_libtsan
			default "./lib/libtsan.so.*"
	
		endmenu

	config PACKAGE_libubsan
		tristate "libubsan........... Runtime library for UndefinedBehaviorSanitizer in GCC"
		default y if DEFAULT_libubsan
		default m if ALL||ALL_NONSHARED
		select PACKAGE_librt
		depends on !mips64
		depends on !arc
		select PACKAGE_libstdcpp
		depends on USE_GLIBC
		depends on !mips64el
		help
		 Runtime library for UndefinedBehaviorSanitizer in GCC
		 http://gcc.gnu.org/
		 Felix Fietkau <nbd@nbd.name>


		menu "Configuration"
		depends on EXTERNAL_TOOLCHAIN && PACKAGE_libubsan
	
		config LIBUBSAN_ROOT_DIR
			string
			prompt "libubsan shared library base directory"
			depends on EXTERNAL_TOOLCHAIN && PACKAGE_libubsan
			default TOOLCHAIN_ROOT  if !NATIVE_TOOLCHAIN
			default "/"  if NATIVE_TOOLCHAIN
	
		config LIBUBSAN_FILE_SPEC
			string
			prompt "libubsan shared library files (use wildcards)"
			depends on EXTERNAL_TOOLCHAIN && PACKAGE_libubsan
			default "./lib/libubsan.so.*"
	
		endmenu

endmenu

menu "Kernel modules"

menu "Block Devices"
endmenu
menu "CAN Support"
endmenu
menu "Cryptographic API modules"
endmenu
menu "Filesystems"
endmenu
menu "FireWire support"
endmenu
menu "GPIO support"
endmenu
menu "Hardware Monitoring Support"
endmenu
menu "I2C support"
endmenu
menu "Industrial I/O Modules"
endmenu
menu "Input modules"
endmenu
menu "LED modules"
endmenu
menu "Libraries"
endmenu
menu "Multiplexer Support"
endmenu
menu "Native Language Support"
endmenu
menu "Netfilter Extensions"
endmenu
menu "Network Devices"
endmenu
menu "Network Support"
endmenu
menu "Other modules"
endmenu
menu "PCMCIA support"
endmenu
menu "SPI Support"
endmenu
menu "Sound Support"
endmenu
menu "USB Support"
endmenu
menu "Video Support"
endmenu
menu "Virtualization"
endmenu
menu "W1 support"
endmenu
menu "WPAN 802.15.4 Support"
endmenu
menu "Wireless Drivers"
endmenu
endmenu

menu "Libraries"

	config PACKAGE_libcronet
		tristate "libcronet............................. The Chromium network stack library"
		default y if DEFAULT_libcronet
		default m if ALL
		depends on !(arc||armeb||mips||mips64||powerpc||TARGET_gemini)
		select PACKAGE_libpthread if USE_GLIBC
		select PACKAGE_libatomic
		select PACKAGE_libc
		select PACKAGE_librt if USE_GLIBC
		help
		 Cronet is the Chromium network stack made available to Android apps as a library.
		 
		   Cronet takes advantage of multiple technologies that reduce the latency and
		   increase the throughput of the network requests that your app needs to work.
		 https://github.com/klzgrad/naiveproxy
		 Tianling Shen <cnsztl@immortalwrt.org>

endmenu

menu "Network"

menu "IP Addresses and Names"
	config PACKAGE_dns2tcp
		tristate "dns2tcp..................... utility to convert dns query from udp to tcp"
		default y if DEFAULT_dns2tcp
		default m if ALL
		select PACKAGE_libpthread if USE_GLIBC
		select PACKAGE_librt if USE_GLIBC
		select PACKAGE_libc
		help
		 utility to convert dns query from udp to tcp
		 https://github.com/zfl9/dns2tcp
		 Tianling Shen <cnsztl@immortalwrt.org>

	config PACKAGE_v2ray-geoip
		tristate "v2ray-geoip......................................... GeoIP List for V2Ray"
		default y if DEFAULT_v2ray-geoip
		default m if ALL
		select PACKAGE_librt if USE_GLIBC
		select PACKAGE_libc
		select PACKAGE_libpthread if USE_GLIBC
		help
		 GeoIP List for V2Ray
		 https://www.v2fly.org
		 Tianling Shen <cnsztl@immortalwrt.org>

	config PACKAGE_v2ray-geosite
		tristate "v2ray-geosite..................................... Geosite List for V2Ray"
		default y if DEFAULT_v2ray-geosite
		default m if ALL
		select PACKAGE_librt if USE_GLIBC
		select PACKAGE_libc
		select PACKAGE_libpthread if USE_GLIBC
		help
		 Geosite List for V2Ray
		 https://www.v2fly.org
		 Tianling Shen <cnsztl@immortalwrt.org>

endmenu
menu "Web Servers/Proxies"
	config PACKAGE_naiveproxy
		tristate "naiveproxy........................................ Make a fortune quietly"
		default y if DEFAULT_naiveproxy
		default m if ALL
		select PACKAGE_librt if USE_GLIBC
		select PACKAGE_libc
		select PACKAGE_libatomic
		select PACKAGE_libpthread if USE_GLIBC
		depends on !(arc||armeb||mips||mips64||powerpc||TARGET_gemini)
		help
		 NaïveProxy uses Chrome's network stack to camouflage traffic with strong
		   censorship resistance and low detectability. Reusing Chrome's stack also
		   ensures best practices in performance and security.
		 https://github.com/klzgrad/naiveproxy
		 Tianling Shen <cnsztl@immortalwrt.org>

	config PACKAGE_shadowsocks-rust-sslocal
		tristate "shadowsocks-rust-sslocal........................ shadowsocks-rust sslocal"
		default y if DEFAULT_shadowsocks-rust-sslocal
		default m if ALL
		depends on (aarch64||arm||i386||mips||mipsel||x86_64)
		select PACKAGE_libpthread if USE_GLIBC
		select PACKAGE_librt if USE_GLIBC
		depends on !(TARGET_x86_geode||TARGET_x86_legacy)
		select PACKAGE_libc
		depends on USE_MUSL
		help
		 shadowsocks-rust sslocal
		 https://github.com/shadowsocks/shadowsocks-rust
		 Tianling Shen <cnsztl@immortalwrt.org>

	config PACKAGE_shadowsocks-rust-ssmanager
		tristate "shadowsocks-rust-ssmanager.................... shadowsocks-rust ssmanager"
		default y if DEFAULT_shadowsocks-rust-ssmanager
		default m if ALL
		depends on USE_MUSL
		depends on !(TARGET_x86_geode||TARGET_x86_legacy)
		select PACKAGE_librt if USE_GLIBC
		select PACKAGE_libc
		select PACKAGE_libpthread if USE_GLIBC
		depends on (aarch64||arm||i386||mips||mipsel||x86_64)
		help
		 shadowsocks-rust ssmanager
		 https://github.com/shadowsocks/shadowsocks-rust
		 Tianling Shen <cnsztl@immortalwrt.org>

	config PACKAGE_shadowsocks-rust-ssserver
		tristate "shadowsocks-rust-ssserver...................... shadowsocks-rust ssserver"
		default y if DEFAULT_shadowsocks-rust-ssserver
		default m if ALL
		depends on (aarch64||arm||i386||mips||mipsel||x86_64)
		select PACKAGE_libpthread if USE_GLIBC
		select PACKAGE_libc
		depends on !(TARGET_x86_geode||TARGET_x86_legacy)
		select PACKAGE_librt if USE_GLIBC
		depends on USE_MUSL
		help
		 shadowsocks-rust ssserver
		 https://github.com/shadowsocks/shadowsocks-rust
		 Tianling Shen <cnsztl@immortalwrt.org>

	config PACKAGE_shadowsocks-rust-ssservice
		tristate "shadowsocks-rust-ssservice.................... shadowsocks-rust ssservice"
		default y if DEFAULT_shadowsocks-rust-ssservice
		default m if ALL
		depends on USE_MUSL
		depends on !(TARGET_x86_geode||TARGET_x86_legacy)
		select PACKAGE_libc
		select PACKAGE_librt if USE_GLIBC
		select PACKAGE_libpthread if USE_GLIBC
		depends on (aarch64||arm||i386||mips||mipsel||x86_64)
		help
		 shadowsocks-rust ssservice
		 https://github.com/shadowsocks/shadowsocks-rust
		 Tianling Shen <cnsztl@immortalwrt.org>

	config PACKAGE_shadowsocks-rust-ssurl
		tristate "shadowsocks-rust-ssurl............................ shadowsocks-rust ssurl"
		default y if DEFAULT_shadowsocks-rust-ssurl
		default m if ALL
		depends on USE_MUSL
		depends on !(TARGET_x86_geode||TARGET_x86_legacy)
		select PACKAGE_libc
		select PACKAGE_librt if USE_GLIBC
		select PACKAGE_libpthread if USE_GLIBC
		depends on (aarch64||arm||i386||mips||mipsel||x86_64)
		help
		 shadowsocks-rust ssurl
		 https://github.com/shadowsocks/shadowsocks-rust
		 Tianling Shen <cnsztl@immortalwrt.org>

	config PACKAGE_shadowsocksr-libev-ssr-check
		tristate "shadowsocksr-libev-ssr-check................ shadowsocksr-libev ssr-check"
		default y if DEFAULT_shadowsocksr-libev-ssr-check
		default m if ALL
		select PACKAGE_libpcre
		select PACKAGE_libev
		select PACKAGE_libopenssl
		select PACKAGE_librt if USE_GLIBC
		select PACKAGE_libc
		select PACKAGE_libpthread
		select PACKAGE_libpthread if USE_GLIBC
		select PACKAGE_zlib
		select PACKAGE_libudns
		select PACKAGE_libsodium
		help
		 shadowsocksr-libev ssr-check
		 https://github.com/shadowsocksrr/shadowsocksr-libev
		 

	config PACKAGE_shadowsocksr-libev-ssr-local
		tristate "shadowsocksr-libev-ssr-local................ shadowsocksr-libev ssr-local"
		default y if DEFAULT_shadowsocksr-libev-ssr-local
		default m if ALL
		select PACKAGE_libudns
		select PACKAGE_libsodium
		select PACKAGE_zlib
		select PACKAGE_libpthread if USE_GLIBC
		select PACKAGE_libpthread
		select PACKAGE_libopenssl
		select PACKAGE_libc
		select PACKAGE_librt if USE_GLIBC
		select PACKAGE_libev
		select PACKAGE_libpcre
		help
		 shadowsocksr-libev ssr-local
		 https://github.com/shadowsocksrr/shadowsocksr-libev
		 

	config PACKAGE_shadowsocksr-libev-ssr-nat
		tristate "shadowsocksr-libev-ssr-nat.................... shadowsocksr-libev ssr-nat"
		default y if DEFAULT_shadowsocksr-libev-ssr-nat
		default m if ALL
		select PACKAGE_libpthread
		select PACKAGE_libpthread if USE_GLIBC
		select PACKAGE_libsodium
		select PACKAGE_libudns
		select PACKAGE_zlib
		select PACKAGE_libev
		select PACKAGE_libpcre
		select PACKAGE_librt if USE_GLIBC
		select PACKAGE_libopenssl
		select PACKAGE_libc
		help
		 shadowsocksr-libev ssr-nat
		 https://github.com/shadowsocksrr/shadowsocksr-libev
		 

	config PACKAGE_shadowsocksr-libev-ssr-redir
		tristate "shadowsocksr-libev-ssr-redir................ shadowsocksr-libev ssr-redir"
		default y if DEFAULT_shadowsocksr-libev-ssr-redir
		default m if ALL
		select PACKAGE_libopenssl
		select PACKAGE_librt if USE_GLIBC
		select PACKAGE_libc
		select PACKAGE_libpcre
		select PACKAGE_libev
		select PACKAGE_zlib
		select PACKAGE_libudns
		select PACKAGE_libsodium
		select PACKAGE_libpthread if USE_GLIBC
		select PACKAGE_libpthread
		help
		 shadowsocksr-libev ssr-redir
		 https://github.com/shadowsocksrr/shadowsocksr-libev
		 

	config PACKAGE_shadowsocksr-libev-ssr-server
		tristate "shadowsocksr-libev-ssr-server.............. shadowsocksr-libev ssr-server"
		default y if DEFAULT_shadowsocksr-libev-ssr-server
		default m if ALL
		select PACKAGE_libpthread
		select PACKAGE_libpthread if USE_GLIBC
		select PACKAGE_zlib
		select PACKAGE_libsodium
		select PACKAGE_libudns
		select PACKAGE_libpcre
		select PACKAGE_libev
		select PACKAGE_libc
		select PACKAGE_libopenssl
		select PACKAGE_librt if USE_GLIBC
		help
		 shadowsocksr-libev ssr-server
		 https://github.com/shadowsocksrr/shadowsocksr-libev
		 

	config PACKAGE_trojan
		tristate "trojan............. An unidentifiable mechanism that helps you bypass GFW"
		default y if DEFAULT_trojan
		default m if ALL
		select PACKAGE_boost-date_time
		select PACKAGE_librt if USE_GLIBC
		select PACKAGE_libopenssl
		select PACKAGE_libc
		select PACKAGE_libstdcpp
		select PACKAGE_boost-system
		select PACKAGE_libpthread if USE_GLIBC
		select PACKAGE_boost-program_options
		select PACKAGE_boost
		select PACKAGE_libpthread
		help
		 An unidentifiable mechanism that helps you bypass GFW
		 https://github.com/trojan-gfw/trojan
		 GreaterFire

	config PACKAGE_v2ray-plugin
		tristate "v2ray-plugin............... SIP003 plugin for shadowsocks, based on v2ray"
		default y if DEFAULT_v2ray-plugin
		default m if ALL
		select PACKAGE_libpthread if USE_GLIBC
		select PACKAGE_ca-bundle
		select PACKAGE_libc
		select PACKAGE_librt if USE_GLIBC
		help
		 SIP003 plugin for shadowsocks, based on v2ray
		 https://github.com/teddysun/v2ray-plugin
		 madeye <max.c.lv@gmail.com>

	config PACKAGE_v2raya
		tristate "v2raya............................... A Linux web GUI client of Project V"
		default y if DEFAULT_v2raya
		default m if ALL
		select PACKAGE_iptables-mod-filter
		depends on IPV6
		select PACKAGE_ca-bundle
		select PACKAGE_libc
		select PACKAGE_librt if USE_GLIBC
		select PACKAGE_iptables-mod-tproxy
		select PACKAGE_iptables-mod-extra
		select PACKAGE_kmod-ipt-nat6
		select PACKAGE_xray-core
		select PACKAGE_libpthread if USE_GLIBC
		select PACKAGE_iptables-mod-conntrack-extra
		help
		 v2rayA is a V2Ray Linux client supporting global transparent proxy,
		   compatible with SS, SSR, Trojan(trojan-go), PingTunnel protocols.
		 https://v2raya.org
		 Tianling Shen <cnsztl@immortalwrt.org>

	config PACKAGE_xray-plugin
		tristate "xray-plugin................. SIP003 plugin for Shadowsocks, based on Xray"
		default y if DEFAULT_xray-plugin
		default m if ALL
		select PACKAGE_ca-bundle
		select PACKAGE_librt if USE_GLIBC
		select PACKAGE_libc
		select PACKAGE_libpthread if USE_GLIBC
		help
		 SIP003 plugin for Shadowsocks, based on Xray
		 https://github.com/teddysun/xray-plugin
		 Tianling Shen <cnsztl@immortalwrt.org>

endmenu
	config PACKAGE_hysteria
		tristate "hysteria"
		default y if DEFAULT_hysteria
		default m if ALL
		select PACKAGE_libpthread if USE_GLIBC
		select PACKAGE_libc
		select PACKAGE_librt if USE_GLIBC
		select PACKAGE_ca-bundle
		help
		 Hysteria is a feature-packed network utility optimized for networks
		   of poor quality (e.g. satellite connections, congested public Wi-Fi,
		   connecting from China to servers abroad) powered by a custom version
		   of QUIC protocol.
		 https://github.com/tobyxdd/hysteria
		 Tianling Shen <cnsztl@immortalwrt.org>

	config PACKAGE_sagernet-core
		tristate "sagernet-core..................... An enhanced v2ray edition for SagerNet"
		default y if DEFAULT_sagernet-core
		default m if ALL
		select PACKAGE_libpthread if USE_GLIBC
		select PACKAGE_ca-bundle
		select PACKAGE_libc
		select PACKAGE_librt if USE_GLIBC
		depends on m || (PACKAGE_v2ray-core != y)
		depends on m || (PACKAGE_xray-core != y)
		help
		 Project V is a set of network tools that help you to build your own computer network.
		   It secures your network connections and thus protects your privacy.
		 
		   This is a v2ray-core fork for SagerNet.
		 https://sagernet.org
		 Tianling Shen <cnsztl@immortalwrt.org>

	config PACKAGE_sagernet-extra
		tristate "sagernet-extra.. An enhanced v2ray edition for SagerNet (extra resources)"
		default y if DEFAULT_sagernet-extra
		default m if ALL
		select PACKAGE_librt if USE_GLIBC
		select PACKAGE_libc
		depends on PACKAGE_sagernet-core
		select PACKAGE_libpthread if USE_GLIBC
		depends on m || (PACKAGE_v2ray-extra != y)
		help
		 Project V is a set of network tools that help you to build your own computer network.
		   It secures your network connections and thus protects your privacy.
		 
		   This includes extra resources for sagernet-core.
		 https://sagernet.org
		 Tianling Shen <cnsztl@immortalwrt.org>

	config PACKAGE_simple-obfs-client
		tristate "simple-obfs-client.................... A simple obfuscating tool (client)"
		default y if DEFAULT_simple-obfs-client
		default m if ALL
		select PACKAGE_libpthread if USE_GLIBC
		select PACKAGE_libev
		select PACKAGE_libpthread
		select PACKAGE_librt if USE_GLIBC
		select PACKAGE_libc
		help
		 Simple-obfs is a simple obfusacting tool, designed as plugin server of shadowsocks.
		 https://github.com/shadowsocks/simple-obfs
		 Jian Chang <aa65535@live.com>

	config PACKAGE_simple-obfs-server
		tristate "simple-obfs-server.................... A simple obfuscating tool (server)"
		default y if DEFAULT_simple-obfs-server
		default m if ALL
		select PACKAGE_libpthread if USE_GLIBC
		select PACKAGE_libc
		select PACKAGE_librt if USE_GLIBC
		select PACKAGE_libpthread
		select PACKAGE_libev
		help
		 Simple-obfs is a simple obfusacting tool, designed as plugin server of shadowsocks.
		 https://github.com/shadowsocks/simple-obfs
		 Jian Chang <aa65535@live.com>

	config PACKAGE_tcping
		tristate "tcping................... tcping measures the latency of a tcp-connection"
		default y if DEFAULT_tcping
		default m if ALL
		select PACKAGE_libpthread if USE_GLIBC
		select PACKAGE_libc
		select PACKAGE_librt if USE_GLIBC
		help
		 tcping measures the latency of a tcp-connection
		 https://github.com/jlyo/tcping
		 

	config PACKAGE_v2ray-core
		tristate "v2ray-core"
		default y if DEFAULT_v2ray-core
		default m if ALL
		select PACKAGE_libpthread if USE_GLIBC
		select PACKAGE_libc
		select PACKAGE_librt if USE_GLIBC
		select PACKAGE_ca-bundle
		help
		 Project V is a set of network tools that help you to build your own computer network.
		   It secures your network connections and thus protects your privacy.
		 https://www.v2fly.org
		 Tianling Shen <cnsztl@immortalwrt.org>

	config PACKAGE_v2ray-extra
		tristate "v2ray-extra"
		default y if DEFAULT_v2ray-extra
		default m if ALL
		select PACKAGE_librt if USE_GLIBC
		select PACKAGE_libc
		select PACKAGE_libpthread if USE_GLIBC
		depends on PACKAGE_v2ray-core
		help
		 Project V is a set of network tools that help you to build your own computer network.
		   It secures your network connections and thus protects your privacy.
		 
		   This includes extra resources for v2ray-core.
		 https://www.v2fly.org
		 Tianling Shen <cnsztl@immortalwrt.org>

	config PACKAGE_xray-core
		tristate "xray-core. A platform for building proxies to bypass network restrictions"
		default y if DEFAULT_xray-core
		default m if ALL
		select PACKAGE_libpthread if USE_GLIBC
		select PACKAGE_libc
		select PACKAGE_librt if USE_GLIBC
		select PACKAGE_ca-bundle
		help
		 Xray, Penetrates Everything. It helps you to build your own computer network.
		   It secures your network connections and thus protects your privacy.
		 https://xtls.github.io
		 Tianling Shen <cnsztl@immortalwrt.org>

endmenu

menu "Utilities"

	config PACKAGE_ldconfig
		tristate "ldconfig............................... Shared library path configuration"
		default y if DEFAULT_ldconfig
		default m if ALL||ALL_NONSHARED
		depends on !USE_MUSL
		help
		 Shared library path configuration
		 Felix Fietkau <nbd@nbd.name>


		menu "Configuration"
			depends on EXTERNAL_TOOLCHAIN && PACKAGE_ldconfig
	
		config LDCONFIG_ROOT_DIR
			string
			prompt "ldconfig base directory"
			depends on EXTERNAL_TOOLCHAIN && PACKAGE_ldconfig
			default TOOLCHAIN_ROOT  if !NATIVE_TOOLCHAIN
			default "/"  if NATIVE_TOOLCHAIN
	
		config LDCONFIG_FILE_SPEC
			string
			prompt "ldconfig file"
			depends on EXTERNAL_TOOLCHAIN && PACKAGE_ldconfig
			default "./sbin/ldconfig"
	
		endmenu

	config PACKAGE_ldd
		tristate "ldd.................................................... LDD trace utility"
		default y if DEFAULT_ldd
		default m if ALL||ALL_NONSHARED
		depends on !USE_MUSL
		help
		 LDD trace utility
		 Felix Fietkau <nbd@nbd.name>


		menu "Configuration"
			depends on EXTERNAL_TOOLCHAIN && PACKAGE_ldd
	
		config LDD_ROOT_DIR
			string
			prompt "ldd trace utility base directory"
			depends on EXTERNAL_TOOLCHAIN && PACKAGE_ldd
			default TOOLCHAIN_ROOT  if !NATIVE_TOOLCHAIN
			default "/"  if NATIVE_TOOLCHAIN
	
		config LDD_FILE_SPEC
			string
			prompt "ldd trace utility file"
			depends on EXTERNAL_TOOLCHAIN && PACKAGE_ldd
			default "./usr/bin/ldd"
	
		endmenu

endmenu

